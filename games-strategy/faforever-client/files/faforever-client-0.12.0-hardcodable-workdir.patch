diff --git a/src/__main__.py b/src/__main__.py
index 868a2b1..b16cf45 100644
--- a/src/__main__.py
+++ b/src/__main__.py
@@ -47,16 +47,10 @@ from PyQt4 import QtGui, uic
 path = os.path.join(os.path.dirname(sys.argv[0]), "PyQt4.uic.widget-plugins")
 uic.widgetPluginPath.append(path)
 
-# Are we running from a frozen interpreter?
-if getattr(sys, 'frozen', False):
-    os.chdir(os.path.dirname(sys.executable))
-else:
-    if sys.platform == 'win32':
-        # We are most likely running from source
-        srcDir = os.path.dirname(os.path.relpath(__file__))
-        devRoot = os.path.abspath(os.path.join(srcDir, os.pardir))
-        os.chdir(devRoot)
-        # We need to set the working directory correctly.
+import config.path
+
+# We need to set the working directory correctly.
+os.chdir(config.path.get_workdir())
 
 import util
 if sys.platform == 'win32':
diff --git a/src/config/path.py b/src/config/path.py
new file mode 100644
index 0000000..183f1b3
--- /dev/null
+++ b/src/config/path.py
@@ -0,0 +1,36 @@
+import os
+import sys
+
+__all__ = [get_workdir, get_resdir]
+
+# sed'able for unix to change during installation
+UNIX_SHARE_PATH = ''
+
+def run_from_frozen():
+    return getattr(sys, 'frozen', False)
+
+def run_from_unix_install():
+    return not run_from_frozen() and sys.platform != 'win32' and UNIX_SHARE_PATH != ''
+
+def run_from_source():
+    return not run_from_frozen() and not run_from_unix_install()
+
+# Gets the directory we want to be our working directory
+def get_workdir():
+    # Are we running from a frozen interpreter?
+    if run_from_frozen():
+        return os.path.dirname(sys.executable)
+    elif run_from_unix_install():
+        # We are on unix and share path was hardcoded
+        return UNIX_SHARE_PATH
+    elif run_from_source():
+        # We are most likely running from source
+        srcDir = os.path.dirname(os.path.relpath(__file__))
+        return os.path.abspath(os.path.join(srcDir, os.pardir))
+
+# Gets the resources dir
+def get_resdir():
+    if run_from_frozen() or run_from_source():
+        return os.path.join(get_workdir(), "res")
+    elif run_from_unix_install():
+        return get_workdir()
diff --git a/src/util/__init__.py b/src/util/__init__.py
index 1a2276e..5a9e5aa 100644
--- a/src/util/__init__.py
+++ b/src/util/__init__.py
@@ -17,6 +17,7 @@ def developer():
     return sys.executable.endswith("python.exe")
 
 from config import VERSION as VERSION_STRING
+import config.path
 
 import logging
 logger = logging.getLogger(__name__)
@@ -25,11 +26,7 @@ LOGFILE_MAX_SIZE = 256 * 1024  #256kb should be enough for anyone
 
 UNITS_PREVIEW_ROOT = "{}/faf/unitsDB/icons/big/".format(Settings.get('content/host'))
 
-# On Windows the res dir is relative to the executable or main.py script
-COMMON_DIR = os.path.join(os.getcwd(), "res")
-if sys.platform != 'win32' and not os.path.exists(COMMON_DIR):
-    #On Linux the res dir is installed as /usr/share/fafclient
-    COMMON_DIR = os.path.join("/usr", "share", "fafclient")
+COMMON_DIR = config.path.get_resdir()
 
 # These directories are in Appdata (e.g. C:\ProgramData on some Win7 versions)
 if 'ALLUSERSPROFILE' in os.environ:
